package com.example.demo.entities;// default package

// Generated Oct 15, 2025, 4:39:38â€¯PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * TransactionFees generated by hbm2java
 */
@Entity
@Table(name = "transaction_fees")
public class TransactionFees implements java.io.Serializable {

	private Long id;
	private TransactionTypes transactionTypes;
	private BigDecimal feeAmount;
	private BigDecimal feePercentage;
	private BigDecimal minAmount;
	private BigDecimal maxAmount;
	private Date createdAt;

	public TransactionFees() {
	}

	public TransactionFees(TransactionTypes transactionTypes, BigDecimal feeAmount, Date createdAt) {
		this.transactionTypes = transactionTypes;
		this.feeAmount = feeAmount;
		this.createdAt = createdAt;
	}

	public TransactionFees(TransactionTypes transactionTypes, BigDecimal feeAmount, BigDecimal feePercentage,
			BigDecimal minAmount, BigDecimal maxAmount, Date createdAt) {
		this.transactionTypes = transactionTypes;
		this.feeAmount = feeAmount;
		this.feePercentage = feePercentage;
		this.minAmount = minAmount;
		this.maxAmount = maxAmount;
		this.createdAt = createdAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transaction_type_id", nullable = false)
	public TransactionTypes getTransactionTypes() {
		return this.transactionTypes;
	}

	public void setTransactionTypes(TransactionTypes transactionTypes) {
		this.transactionTypes = transactionTypes;
	}

	@Column(name = "fee_amount", nullable = false, precision = 10)
	public BigDecimal getFeeAmount() {
		return this.feeAmount;
	}

	public void setFeeAmount(BigDecimal feeAmount) {
		this.feeAmount = feeAmount;
	}

	@Column(name = "fee_percentage", precision = 5)
	public BigDecimal getFeePercentage() {
		return this.feePercentage;
	}

	public void setFeePercentage(BigDecimal feePercentage) {
		this.feePercentage = feePercentage;
	}

	@Column(name = "min_amount", precision = 15)
	public BigDecimal getMinAmount() {
		return this.minAmount;
	}

	public void setMinAmount(BigDecimal minAmount) {
		this.minAmount = minAmount;
	}

	@Column(name = "max_amount", precision = 15)
	public BigDecimal getMaxAmount() {
		return this.maxAmount;
	}

	public void setMaxAmount(BigDecimal maxAmount) {
		this.maxAmount = maxAmount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

}
