package com.example.demo.entities;// default package

// Generated Oct 15, 2025, 4:39:38â€¯PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "identity_card"), @UniqueConstraint(columnNames = "username") })
public class Users implements java.io.Serializable {

	private Long id;

	private UserRoles userRoles;

	private UserStatuses userStatuses;
	private String username;
	private String password;
	private String email;
	private String fullName;
	private String phone;
	@JsonFormat(pattern = "dd-MM-yyyy")
	private LocalDate dateOfBirth;
	private String identityCard;
	private String address;
	private LocalDateTime createdAt;
	private LocalDateTime updatedAt;
	private Set<Accounts> accountses = new HashSet<Accounts>(0);

	public Users() {
	}

	public Users(UserRoles userRoles, UserStatuses userStatuses, String username, String password, String email,
			String fullName, LocalDateTime createdAt, LocalDateTime updatedAt) {
		this.userRoles = userRoles;
		this.userStatuses = userStatuses;
		this.username = username;
		this.password = password;
		this.email = email;
		this.fullName = fullName;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Users(UserRoles userRoles, UserStatuses userStatuses, String username, String password, String email,
			String fullName, String phone, LocalDate dateOfBirth, String identityCard, String address,
			LocalDateTime createdAt, LocalDateTime updatedAt, Set<Accounts> accountses) {
		this.userRoles = userRoles;
		this.userStatuses = userStatuses;
		this.username = username;
		this.password = password;
		this.email = email;
		this.fullName = fullName;
		this.phone = phone;
		this.dateOfBirth = dateOfBirth;
		this.identityCard = identityCard;
		this.address = address;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.accountses = accountses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public UserRoles getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(UserRoles userRoles) {
		this.userRoles = userRoles;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id", nullable = false)
	public UserStatuses getUserStatuses() {
		return this.userStatuses;
	}

	public void setUserStatuses(UserStatuses userStatuses) {
		this.userStatuses = userStatuses;
	}

	@Column(name = "username", unique = true, nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "full_name", nullable = false, length = 100)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "date_of_birth", length = 10)
	public LocalDate getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(LocalDate dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "identity_card", unique = true, length = 20)
	public String getIdentityCard() {
		return this.identityCard;
	}

	public void setIdentityCard(String identityCard) {
		this.identityCard = identityCard;
	}

	@Column(name = "address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "created_at", nullable = false, length = 19)
	public LocalDateTime getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(LocalDateTime createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated_at", nullable = false, length = 19)
	public LocalDateTime getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(LocalDateTime updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Accounts> getAccountses() {
		return this.accountses;
	}

	public void setAccountses(Set<Accounts> accountses) {
		this.accountses = accountses;
	}

}
